const $ = s => document.querySelector(s);
const chat = $('#chat');
const subject = $('#subject');
const grade = $('#grade');
const style = $('#style');
const queryEl = $('#query');
const askBtn = $('#askBtn');
const themeToggle = $('#themeToggle');

// === Theme toggle ===
(function initTheme(){
  const saved = localStorage.getItem('theme') || 'light';
  document.documentElement.setAttribute('data-theme', saved);
  themeToggle.textContent = saved === 'dark' ? '‚òÄÔ∏è' : 'üåô';
})();
themeToggle.addEventListener('click', () => {
  const cur = document.documentElement.getAttribute('data-theme');
  const next = cur === 'dark' ? 'light' : 'dark';
  document.documentElement.setAttribute('data-theme', next);
  localStorage.setItem('theme', next);
  themeToggle.textContent = next === 'dark' ? '‚òÄÔ∏è' : 'üåô';
});

// === Autosize textarea ===
queryEl.addEventListener('input', () => {
  queryEl.style.height = 'auto';
  queryEl.style.height = Math.min(queryEl.scrollHeight, 240) + 'px';
});

// === Demo send (–ø–æ–∫–∞ –±–µ–∑ API): –≥–µ–Ω–µ—Ä–∏–º MOCK TutorOutput ===
askBtn.addEventListener('click', () => {
  const text = queryEl.value.trim();
  if (!text) return;
  addMsg('user', text);
  queryEl.value = '';
  queryEl.style.height = 'auto';

  const tutor = makeMockTutorOutput({ text, subject: subject.value });
  addTutorMsg(tutor);
  rerenderMath();
});

// === –°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ ===
function addMsg(role, content) {
  const el = document.createElement('div');
  el.className = `msg ${role}`;
  el.innerHTML = `<h3>${role === 'user' ? '–í—ã' : '–ë–æ—Ç'}</h3><div class="content"></div>`;
  el.querySelector('.content').textContent = content;
  chat.appendChild(el);
  el.scrollIntoView({ behavior: 'smooth', block: 'end' });
}

// === –°–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–µ–∫—Ü–∏—è–º–∏ (TutorOutput) ===
function addTutorMsg(tutor) {
  const el = document.createElement('div');
  el.className = 'msg assistant';

  const tabs = [
    { id: 'explanation', label: '–û–±—ä—è—Å–Ω–µ–Ω–∏–µ' },
    { id: 'examples', label: '–ü—Ä–∏–º–µ—Ä—ã' },
    { id: 'checks', label: '–°–∞–º–æ–ø—Ä–æ–≤–µ—Ä–∫–∞' },
    { id: 'homework', label: '–î–æ–º–∞—à–∫–∞' },
    { id: 'pitfalls', label: '–û—à–∏–±–∫–∏' },
    { id: 'citations', label: '–ò—Å—Ç–æ—á–Ω–∏–∫–∏' },
  ];

  el.innerHTML = `
    <h3>–ë–æ—Ç</h3>
    <div class="tabs">
      ${tabs.map((t,i)=>`<div class="tab ${i===0?'active':''}" data-tab="${t.id}">${t.label}</div>`).join('')}
    </div>
    <div class="tabpanels">
      <div class="tabpanel active" data-panel="explanation">${mdToHtml(tutor.explanation)}</div>
      <div class="tabpanel" data-panel="examples">${listHtml(tutor.examples)}</div>
      <div class="tabpanel" data-panel="checks">${checksHtml(tutor.checks)}</div>
      <div class="tabpanel" data-panel="homework">${listHtml(tutor.homework)}</div>
      <div class="tabpanel" data-panel="pitfalls">${listHtml(tutor.pitfalls)}</div>
      <div class="tabpanel" data-panel="citations">${listHtml(tutor.citations)}</div>
    </div>
  `;

  // —Ç–∞–±—ã
  el.querySelectorAll('.tab').forEach(tab => {
    tab.addEventListener('click', () => {
      const id = tab.dataset.tab;
      el.querySelectorAll('.tab').forEach(t => t.classList.toggle('active', t === tab));
      el.querySelectorAll('.tabpanel').forEach(p => p.classList.toggle('active', p.dataset.panel === id));
      rerenderMath();
    });
  });

  // –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–≤–∏–∑–æ–≤
  el.querySelectorAll('.quiz-item .btn-check').forEach(btn => {
    btn.addEventListener('click', () => {
      const item = btn.closest('.quiz-item');
      const type = item.dataset.type;
      const correct = item.dataset.answer;
      let userVal = '';

      if (type === 'mcq') {
        const checked = item.querySelector('input[type=radio]:checked');
        userVal = checked ? checked.value : '';
      } else if (type === 'bool') {
        const checked = item.querySelector('input[type=radio]:checked');
        userVal = checked ? checked.value : '';
      } else if (type === 'short') {
        userVal = item.querySelector('input[type=text]').value.trim();
      }

      const ok = normalizeAns(userVal) === normalizeAns(correct);
      item.classList.remove('correct','wrong');
      item.classList.add(ok ? 'correct' : 'wrong');
      item.querySelector('.explain').style.display = 'block';
    });
  });

  chat.appendChild(el);
  el.scrollIntoView({ behavior: 'smooth', block: 'end' });
  rerenderMath();
}

// === Helpers –¥–ª—è HTML ===
function mdToHtml(s='') {
  // –º–∏–Ω–∏-¬´markdown¬ª: –∞–±–∑–∞—Ü—ã –∏ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫, –æ—Å—Ç–∞–ª—å–Ω–æ–µ ‚Äî –∫–∞–∫ –µ—Å—Ç—å (KaTeX –æ—Ç—Ä–∏—Å—É–µ—Ç —Ñ–æ—Ä–º—É–ª—ã)
  const esc = s.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;');
  return esc.split(/\n{2,}/).map(p=>`<p>${p.replace(/\n/g,'<br>')}</p>`).join('');
}

function listHtml(arr=[]) {
  if (!arr.length) return '<div class="muted">–ü—É—Å—Ç–æ</div>';
  return `<ul>${arr.map(x=>`<li>${mdToHtml(String(x))}</li>`).join('')}</ul>`;
}

function checksHtml(items=[]) {
  if (!items.length) return '<div class="muted">–ü–æ–∫–∞ –±–µ–∑ –≤–æ–ø—Ä–æ—Å–æ–≤</div>';
  return items.map((q,i)=>quizItemHtml(q,i)).join('');
}

function quizItemHtml(q, i) {
  const id = `q_${Date.now()}_${i}`;
  if (q.type === 'mcq') {
    return `
      <div class="quiz-item" data-type="mcq" data-answer="${escapeHtml(q.answer)}">
        <div class="q">${mdToHtml(q.q)}</div>
        <div class="opts">
          ${(q.options||[]).map((opt,idx)=>`
            <label>
              <input type="radio" name="${id}" value="${escapeHtml(opt)}"> ${escapeHtml(opt)}
            </label>
          `).join('')}
        </div>
        <div class="quiz-actions"><button class="btn-check">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button></div>
        <div class="explain" style="display:none">${mdToHtml(q.explain||'')}</div>
      </div>
    `;
  }
  if (q.type === 'bool') {
    return `
      <div class="quiz-item" data-type="bool" data-answer="${q.answer ? 'true':'false'}">
        <div class="q">${mdToHtml(q.q)}</div>
        <label><input type="radio" name="${id}" value="true"> –í–µ—Ä–Ω–æ</label>
        <label><input type="radio" name="${id}" value="false"> –ù–µ–≤–µ—Ä–Ω–æ</label>
        <div class="quiz-actions"><button class="btn-check">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button></div>
        <div class="explain" style="display:none">${mdToHtml(q.explain||'')}</div>
      </div>
    `;
  }
  // short
  return `
    <div class="quiz-item" data-type="short" data-answer="${escapeHtml(q.answer)}">
      <div class="q">${mdToHtml(q.q)}</div>
      <input type="text" placeholder="–û—Ç–≤–µ—Ç">
      <div class="quiz-actions"><button class="btn-check">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button></div>
      <div class="explain" style="display:none">${mdToHtml(q.explain||'')}</div>
    </div>
  `;
}

function escapeHtml(s=''){ return String(s).replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;'); }
function normalizeAns(s=''){ return String(s).trim().toLowerCase(); }

// KaTeX rerender (–Ω–∞ —Å–ª—É—á–∞–π –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∫–ª–∞–¥–æ–∫)
function rerenderMath(){
  if (window.renderMathInElement) {
    renderMathInElement(document.body,{
      delimiters:[
        {left:'$$', right:'$$', display:true},
        {left:'\\(', right:'\\)', display:false}
      ]
    });
  }
}

// === MOCK –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä TutorOutput –¥–ª—è –¥–µ–º–æ ===
function makeMockTutorOutput({ text, subject }) {
  // —á—É—Ç—å-—á—É—Ç—å ¬´—Ç–µ–º–∏–∑–∏—Ä—É–µ–º¬ª –ø–æ–¥ –º–∞—Ç–µ–º–∞—Ç–∏–∫—É/–±–∏–æ–ª–æ–≥–∏—é –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏
  if (subject === 'mathematics') {
    return {
      explanation:
`–†–∞–∑–±–µ—Ä—ë–º —Ç–µ–º—É: **${text}**. –ù–∞–ø–æ–º–Ω–∏–º —Ç–µ–æ—Ä–µ–º—É –ü–∏—Ñ–∞–≥–æ—Ä–∞:
$$a^2 + b^2 = c^2.$$
–ï—Å–ª–∏ –∏–∑–≤–µ—Å—Ç–Ω—ã –∫–∞—Ç–µ—Ç—ã \\(a\\) –∏ \\(b\\), –≥–∏–ø–æ—Ç–µ–Ω—É–∑–∞: \\(c = \\sqrt{a^2 + b^2}\\).`,
      examples: [
        "–ü—Ä–∏–º–µ—Ä: –¥–ª—è a=3, b=4 ‚Üí c=5.",
        "–ï—Å–ª–∏ c=13 –∏ a=5 ‚Üí b=\\(\\sqrt{13^2-5^2}=12\\)."
      ],
      checks: [
        { type:'mcq', q:'–ß–µ–º—É —Ä–∞–≤–Ω–∞ –≥–∏–ø–æ—Ç–µ–Ω—É–∑–∞ –ø—Ä–∏ a=6, b=8?', options:['10','12','14'], answer:'10', explain:'\\(c=\\sqrt{36+64}=10\\).' },
        { type:'short', q:'–ó–∞–ø–∏—à–∏ —Ñ–æ—Ä–º—É–ª—É —Ç–µ–æ—Ä–µ–º—ã –ü–∏—Ñ–∞–≥–æ—Ä–∞ (–≤ –≤–∏–¥–µ a^2 + b^2 = ...).', answer:'c^2', explain:'a^2 + b^2 = c^2' },
        { type:'bool', q:'–í –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–æ–º —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–µ —Å—É–º–º–∞ –∫–∞—Ç–µ—Ç–æ–≤ —Ä–∞–≤–Ω–∞ –≥–∏–ø–æ—Ç–µ–Ω—É–∑–µ.', answer:false, explain:'–ù–µ–≤–µ—Ä–Ω–æ: –ø–æ —Ç–µ–æ—Ä–µ–º–µ –ü–∏—Ñ–∞–≥–æ—Ä–∞ —Å—É–º–º–∞ **–∫–≤–∞–¥—Ä–∞—Ç–æ–≤** –∫–∞—Ç–µ—Ç–æ–≤ —Ä–∞–≤–Ω–∞ –∫–≤–∞–¥—Ä–∞—Ç—É –≥–∏–ø–æ—Ç–µ–Ω—É–∑—ã.' }
      ],
      homework: [
        "–ù–∞–π–¥–∏ c –ø—Ä–∏ a=7, b=24.",
        "–î–∞–Ω—ã c=25, b=24. –ù–∞–π–¥–∏ a.",
      ],
      pitfalls: [
        "–ü—É—Ç–∞—é—Ç —Å—É–º–º—É —á–∏—Å–µ–ª –∏ —Å—É–º–º—É –∏—Ö –∫–≤–∞–¥—Ä–∞—Ç–æ–≤.",
        "–ó–∞–±—ã–≤–∞—é—Ç, —á—Ç–æ —Ç–µ–æ—Ä–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω—ã—Ö —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤."
      ],
      citations: ["–®–∞—Ä—ã–≥–∏–Ω –ò.–§., –ì–µ–æ–º–µ—Ç—Ä–∏—è, 7‚Äì9"],
      tutor_state: { mastery: 0.6, quiz_ready: false, next_step: 'ask_clarifying' }
    };
  }

  // –±–∏–æ–ª–æ–≥–∏—è ‚Äî —è–¥—Ä–æ –∫–ª–µ—Ç–∫–∏ (–ø—Ä–æ—Å—Ç–æ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Å–µ–∫—Ü–∏–π)
  return {
    explanation:
`–¢–µ–º–∞: **${text}**. –Ø–¥—Ä–æ ‚Äî –º–µ–º–±—Ä–∞–Ω–Ω—ã–π –æ—Ä–≥–∞–Ω–æ–∏–¥ —ç—É–∫–∞—Ä–∏–æ—Ç–∏—á–µ—Å–∫–æ–π –∫–ª–µ—Ç–∫–∏.
–û—Å–Ω–æ–≤–Ω—ã–µ —á–∞—Å—Ç–∏: —è–¥–µ—Ä–Ω–∞—è –æ–±–æ–ª–æ—á–∫–∞, —Ö—Ä–æ–º–∞—Ç–∏–Ω, —è–¥—Ä—ã—à–∫–æ. –§—É–Ω–∫—Ü–∏–∏ ‚Äî —Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ —ç–∫—Å–ø—Ä–µ—Å—Å–∏—è –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.`,
    examples: [
      "–•—Ä–æ–º–∞—Ç–∏–Ω ‚Äî –î–ù–ö + –±–µ–ª–∫–∏ (–≥–∏—Å—Ç–æ–Ω—ã), —É–ø–∞–∫–æ–≤–∞–Ω–Ω—ã–µ –≤ –Ω—É–∫–ª–µ–æ—Å–æ–º—ã.",
      "–Ø–¥—Ä—ã—à–∫–æ ‚Äî —Å–±–æ—Ä–∫–∞ —Å—É–±—ä–µ–¥–∏–Ω–∏—Ü —Ä–∏–±–æ—Å–æ–º."
    ],
    checks: [
      { type:'mcq', q:'–ì–¥–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å–±–æ—Ä–∫–∞ —Ä–∏–±–æ—Å–æ–º–Ω—ã—Ö —Å—É–±—ä–µ–¥–∏–Ω–∏—Ü?', options:['–ú–∏—Ç–æ—Ö–æ–Ω–¥—Ä–∏—è','–Ø–¥—Ä—ã—à–∫–æ','–ö–æ–º–ø–ª–µ–∫—Å –ì–æ–ª—å–¥–∂–∏'], answer:'–Ø–¥—Ä—ã—à–∫–æ', explain:'–ò–º–µ–Ω–Ω–æ –≤ —è–¥—Ä—ã—à–∫–µ.' },
      { type:'short', q:'–û—Å–Ω–æ–≤–Ω–∞—è –º–æ–ª–µ–∫—É–ª–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å–ª–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏?', answer:'–î–ù–ö', explain:'–î–µ–∑–æ–∫—Å–∏—Ä–∏–±–æ–Ω—É–∫–ª–µ–∏–Ω–æ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞.' },
      { type:'bool', q:'–£ –ø—Ä–æ–∫–∞—Ä–∏–æ—Ç –µ—Å—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω–æ–µ —è–¥—Ä–æ.', answer:false, explain:'–£ –ø—Ä–æ–∫–∞—Ä–∏–æ—Ç —è–¥—Ä–∞ –Ω–µ—Ç; –î–ù–ö ‚Äî –≤ –Ω—É–∫–ª–µ–æ–∏–¥–µ.' }
    ],
    homework: [
      "–°—Ä–∞–≤–Ω–∏ —Ö—Ä–æ–º–∞—Ç–∏–Ω –≤ –∏–Ω—Ç–µ—Ä—Ñ–∞–∑–µ –∏ —Ö—Ä–æ–º–æ—Å–æ–º—ã –≤ –º–∏—Ç–æ–∑–µ.",
      "–ù–∞—Ä–∏—Å—É–π —Å—Ö–µ–º—É —è–¥—Ä–∞ –∏ –ø–æ–¥–ø–∏—à–∏ —á–∞—Å—Ç–∏."
    ],
    pitfalls: [
      "–ü—É—Ç–∞–Ω–∏—Ü–∞ –º–µ–∂–¥—É —è–¥—Ä–æ–º –∏ —è–¥—Ä—ã—à–∫–æ–º.",
      "–°—á–∏—Ç–∞—Ç—å, —á—Ç–æ —É –≤—Å–µ—Ö –æ—Ä–≥–∞–Ω–∏–∑–º–æ–≤ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –µ—Å—Ç—å —è–¥—Ä–æ."
    ],
    citations: ["–®–∫–æ–ª—å–Ω—ã–π —É—á–µ–±–Ω–∏–∫ –±–∏–æ–ª–æ–≥–∏–∏, 8 –∫–ª–∞—Å—Å"],
    tutor_state: { mastery: 0.65, quiz_ready: false, next_step: 'ask_clarifying' }
  };
}
